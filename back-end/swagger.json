{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Inventory API Docs",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "host": "localhost:8000",
  "basePath": "/api",
  "tags": [
    {
      "name": "Auth",
      "description": "Registration and login"
    },
    {
      "name": "Groups",
      "description": "Gropus that conain items"
    },
    {
      "name": "Items",
      "description": "Items that user enters in a group"
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "Register a new user",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User that we want to create",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TokenResponse"
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "Login",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "Login",
            "schema": {
              "$ref": "#/definitions/LoginSchema"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TokenResponse"
            }
          }
        }
      }
    },
    "/auth/:id": {
      "get": {
        "tags": ["Auth"],
        "summary": "Get single user",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "Get a single user by providing id as a param in url",
            "schema": {
              "type": "object",
              "properties": {
                "_id": "string",
                "username": "string",
                "email": "string",
                "organizationName": "string",
                "items": "array"
              },
              "example": {
                "_id": "fi32ifh29fnf9j2380f832h",
                "username": "veljko123",
                "email": "veljkocukic@gmail.com",
                "organizationName": "VeljkoOrg",
                "items": "['r32r23f32ff','f32f2f3233','f32v343544g54']"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TokenResponse"
            }
          }
        }
      }
    },
    "/groups": {
      "post": {
        "tags": ["Groups"],
        "summary": "Creating a new group",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "Creating group",
            "schema": {
              "$ref": "#/definitions/GroupsPostSchema"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GroupSingleResponse"
            }
          }
        }
      },
      "get": {
        "tags": ["Groups"],
        "summary": "Getting all gropus",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": ["singleGruop"],
              "example": ["singleGroupObject"]
            }
          }
        }
      }
    },
    "/groups/:id": {
      "get": {
        "tags": ["Groups"],
        "summary": "Getting single group",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string"
                },
                "items": {
                  "type": {
                    "type": "array"
                  }
                },
                "maxItems": {
                  "type": "number"
                }
              }
            }
          }
        }
      }
    },
    "/items/:groupId/add": {
      "post": {
        "tags": ["Items"],
        "summary": "Creating a new item",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "Creating item",
            "schema": {
              "$ref": "#/definitions/SingleItemSchema"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "example": {
                "response": "createdItemResponse"
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Items"],
        "summary": "Creating a new item",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "Creating item",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "example": {
                "response": "createdItemResponse"
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "required": ["username", "email", "password"],
      "properties": {
        "username": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "organizationName": {
          "type": "string"
        },
        "groups": {
          "type": "array"
        }
      }
    },
    "TokenResponse": {
      "type": "string"
    },
    "Users": {
      "type": "array",
      "$ref": "#/definitions/User"
    },
    "LoginSchema": {
      "required": ["email", "password"],
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "GroupsPostSchema": {
      "required": ["name"],
      "properties": {
        "items": {
          "type": "array"
        },
        "name": {
          "type": "string"
        },
        "maxItems": {
          "type": "number"
        }
      }
    },
    "GroupSingleResponse": {
      "properties": {
        "_id": {
          "type": "string"
        },
        "items": {
          "type": "array"
        },
        "name": {
          "type": "string"
        },
        "maxItems": {
          "type": "number"
        }
      }
    },
    "GroupAllResponse": {
      "properties": "array"
    },
    "SingleItemSchema": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "quantity": {
          "type": "number"
        },
        "description": {
          "type": "string"
        },
        "max": {
          "type": "number"
        },
        "min": {
          "type": "number"
        },
        "alertAtLow": {
          "type": "number"
        },
        "image": {
          "type": "string"
        }
      }
    }
  },
  "schemes": ["http"],
  "consumes": ["application/json"],
  "produces": ["application/json"]
}
